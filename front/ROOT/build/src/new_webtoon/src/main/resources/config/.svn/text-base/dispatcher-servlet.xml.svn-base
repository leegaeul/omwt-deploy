<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/mvc 
	   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- DAO 관련 설정 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/${serverType}_${dbServer}db.properties</value>
                <value>classpath:config/${serverType}_system.properties</value>
            </list>
        </property> 
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
    
    <bean id="webtoondbDataSource" class="org.apache.commons.dbcp.BasicDataSource">
	    <property name="driverClassName" value="${webtoondb.driverClassName}" />
	    <property name="url" value="${webtoondb.url}" />
	    <property name="username" value="${webtoondb.username}" />
	    <property name="password" value="${webtoondb.password}" />
	    <property name="maxIdle" value="${webtoondb.maxIdle}" />
	    <property name="maxActive" value="${webtoondb.maxActive}" />
	    <property name="maxWait" value="${webtoondb.maxWait}" />
	    <property name="validationQuery" value="SELECT 1"/>
    	<property name="testOnBorrow" value="true"/>
    	<property name="testOnReturn" value="false"/>
    	<property name="testWhileIdle" value="true"/>
    	<property name="timeBetweenEvictionRunsMillis" value="60000"/>
	</bean>	
	
	<context:annotation-config/>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="webtoondbDataSource" />
    </bean>    

    
    <bean id="masterdbDataSource" class="org.apache.commons.dbcp.BasicDataSource">
	    <property name="driverClassName" value="${masterdb.driverClassName}" />
	    <property name="url" value="${masterdb.url}" />
	    <property name="username" value="${masterdb.username}" />
	    <property name="password" value="${masterdb.password}" />
	    <property name="maxIdle" value="${masterdb.maxIdle}" />
	    <property name="maxActive" value="${masterdb.maxActive}" />
	    <property name="maxWait" value="${masterdb.maxWait}" />
	    <property name="validationQuery" value="SELECT 1"/>
    	<property name="testOnBorrow" value="true"/>
    	<property name="testOnReturn" value="false"/>
    	<property name="testWhileIdle" value="true"/>
    	<property name="timeBetweenEvictionRunsMillis" value="60000"/>
	</bean>	
	
	<tx:annotation-driven transaction-manager="masterdbTransactionManager" />
	<bean id="masterdbTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="masterdbDataSource" />
    </bean> 
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="webtoondbDataSource" />
        <property name="configLocation" value="classpath:config/mybatis.xml" />
        <property name="mapperLocations" value="classpath:sqlmap/*.xml" />
    </bean>    
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.olleh.webtoon.common.code,
        		com.olleh.webtoon.common.dao.applay.persistence, 
        		com.olleh.webtoon.common.dao.support.persistence,
        		com.olleh.webtoon.common.dao.shop.persistence, 
        		com.olleh.webtoon.common.dao.support.persistence, 
        		com.olleh.webtoon.common.dao.toon.persistence, 
        		com.olleh.webtoon.common.dao.eventpromotion.persistence,
        		com.olleh.webtoon.common.dao.user.persistence, 
        		com.olleh.webtoon.common.dao.yoyozine.persistence, 
        		com.olleh.webtoon.common.dao.comment.persistence, 
        		com.olleh.webtoon.common.dao.logo.persistence, 
        		com.olleh.webtoon.common.dao.banner.persistence, 
        		com.olleh.webtoon.common.dao.ticker.persistence, 
        		com.olleh.webtoon.common.dao.premium.persistence, 
        		com.olleh.webtoon.common.dao.orderbuy.persistence,
        		com.olleh.webtoon.common.dao.advertisement.persistence,
        		com.olleh.webtoon.common.dao.shop.persistence,
        		com.olleh.webtoon.common.dao.ranking.persistence,
        		com.olleh.webtoon.common.dao.payment.persistence,
        		com.olleh.webtoon.common.dao.api.persistence,
        		com.olleh.webtoon.common.dao.push.persistence,
        		com.olleh.webtoon.common.dao.novel.persistence,
        		com.olleh.webtoon.common.dao.contest.persistence,
        		com.olleh.webtoon.common.dao.kmc.persistence,
        		com.olleh.webtoon.common.dao.photoevent.persistence,
				com.olleh.webtoon.common.dao.cutplay.persistence,
        		com.olleh.webtoon.common.dao.bluemembership.persistence,
        		com.olleh.webtoon.common.dao.service.persistence, 
        		com.olleh.webtoon.olltoon.mediapack.persistence,
        		com.olleh.webtoon.common.dao.dcb.persistence" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    
    <bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.BillMethodCodeTypeHandler$ToStringConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.BillMethodCodeTypeHandler$ToCodeConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.JoinStatusCodeTypeHandler$ToStringConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.JoinStatusCodeTypeHandler$ToCodeConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.ChangeRequestCodeTypeHandler$ToStringConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.ChangeRequestCodeTypeHandler$ToCodeConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.OrderCodeTypeHandler$ToStringConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.OrderCodeTypeHandler$ToCodeConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.OrderUseCodeTypeHandler$ToStringConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.OrderUseCodeTypeHandler$ToCodeConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.PayStatusCodeTypeHandler$ToStringConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.PayStatusCodeTypeHandler$ToCodeConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.PrdCodeTypeHandler$ToStringConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.PrdCodeTypeHandler$ToCodeConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.CardCodeTypeHandler$ToStringConverter" />
				<bean class="com.olleh.webtoon.common.dao.bluemembership.code.CardCodeTypeHandler$ToCodeConverter" />
			</set>
		</property>
	</bean>
    
    		
    <!-- 
         Controller, Interceptor 등의 bean 자동 검색 설정.
         class 상단에 Component, Controller 어노테이션이 있는 빈을 자동 검색하여  첫글자를 소문자로 변경한 class 이름을 id로 빈 자동 등록.
    -->
    <context:component-scan base-package="com.olleh.webtoon" />
        
    <!--
         Controller 없이 바로 view 페이지로 보내기 위한 Controller bean 등록.
                        아래 <prop key="/authority/none_auth.do">urlController</prop>와 같이 사용한다.
          
    -->
    <bean id="urlController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />
    
    <!-- Json 응답 처리를 위한 bean 등록 -->
    <bean id="mappingJacksonJsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
    
    <bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
    
    <!-- multipart 파일 업로드 처리를 위한 Resolver 설정. -1은 제한없음. 메모리설정 단위는 byte임. -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="-1" />
        <property name="maxInMemorySize" value="1048576" />
	</bean>
    	
    <!-- 
                     로그인 체크가 필요하지 않은 URI 요청에 대한 HandlerMapping 설정 .
                     아래 prop에 리스트 입력해야 해당 URI에 대한 로그인 체크를 하지 않음.
    -->	
    <bean id="noneLoginMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="order" value="1" />
		<property name="alwaysUseFullPath" value="true" />
		<property name="mappings">
		    <props>
		        <prop key="/common/exception.kt">exceptionController</prop>
		    </props>
		</property>
	</bean>
		
	<!-- 로그인 체크가 필요한 URI 요청에 대한 HandlerMapping 설정. id="noneLoginMapping" HandlerMapping에 없는 모든 URI가 처리됨. -->
	<bean id="renewalMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	    <property name="order" value="2" />
		<property name="alwaysUseFullPath" value="true" />
		<property name="interceptors">
			<list>
				<ref bean="renewalInterceptor" />
			</list>
		</property>
	</bean>
	
	<bean id="loginMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	    <property name="order" value="3" />
		<property name="alwaysUseFullPath" value="true" />
		<property name="interceptors">
			<list>
				<ref bean="cookieInterceptor" />
			</list>
		</property>
	</bean>
	
	<!-- HandlerAdapter 등록. @Controller, @RequestMapping 어노테이션이 적용된 클래스를 처리하며 모든 사용자 정의 컨트롤러가 해당된다. -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="alwaysUseFullPath" value="true" />
		<property name="cacheSeconds" value="0" />
	</bean>
	
	<!-- HandlerAdapter 등록. Controller 인터페이스가 적용된 클래스를 처리하며 위에 정의된 id="urlController" 처리를 위해 등록했다. -->
	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

    <!-- ViewResolver 설정. 뷰로 bean을 사용할 경우에 쓰이며  MappingJacksonJsonView, excel, 파일 다운로드 등의 처리를 위해 등록했다. -->
    <bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="1" />
    </bean>

    <!-- ViewResolver 설정. jsp파일은 "prefix + Controller에서 리턴한 뷰이름 + suffix"에 위치함. -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="order" value="2" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
		
	<!-- ResourceBundle 설정. config 경로에는 시스템 설정 관련 내용이, resource 경로에는 메시지 관련 내용이 들어간다. -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:config/${serverType}_system</value>
				<value>classpath:resources/message</value>
			</list> 
		</property>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="3600" />
	</bean>

    <!-- Java에서 ResourceBundle message를 사용하기 위한 Util class 등록 -->
    <bean id="messageUtil" class="com.olleh.webtoon.common.util.MessageUtil">
    </bean>
    
	<!-- log4j 설정 -->
	<bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
        <property name="targetMethod" value="initLogging" />
        <property name="arguments">
            <list>
                <value>classpath:config/${serverType}_log4j.xml</value>
            </list>
        </property>
    </bean>
    
    <bean id="INIpay" class="com.inicis.inipay4.INIpay" />

	<!-- exceptionResolver -->
	<bean id="exceptionResolver" class="com.olleh.webtoon.exception.ApiExceptionResolver" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/old/**/*" />
			<bean class="com.olleh.webtoon.interceptor.ApiInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/bluemembership/*" />
			<bean class="com.olleh.webtoon.interceptor.BluemembershipInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/mytoon/bluemembership/*" />
			<bean class="com.olleh.webtoon.interceptor.BluemembershipInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/m/bluemembership/*" />
			<bean class="com.olleh.webtoon.interceptor.BluemembershipInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/m/mytoon/bluemembership/*" />
			<bean class="com.olleh.webtoon.interceptor.BluemembershipInterceptor" />
		</mvc:interceptor>
		
		<mvc:interceptor >
        	<mvc:mapping path="/ot/*" />
        	<mvc:mapping path="/ot/**/*" />
            <bean class="com.olleh.webtoon.interceptor.AppInfoInterceptor" />
        </mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/ot/bluemembership/*" />
			<bean class="com.olleh.webtoon.interceptor.BluemembershipInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/ot/mytoon/bluemembership/*" />
			<bean class="com.olleh.webtoon.interceptor.BluemembershipInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="15" />
		<property name="maxPoolSize" value="70" />
		<property name="queueCapacity" value="100" />
	</bean>

	<bean id="scheduledExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="1" />
		<property name="maxPoolSize" value="1" />
		<property name="queueCapacity" value="100" />
	</bean>

	<task:scheduler id="taskScheduler" />
	<task:annotation-driven executor="scheduledExecutor"
		scheduler="taskScheduler" />
		
	<!-- 	
	<aop:aspectj-autoproxy />
 
	<bean id="mapperLogging" class="com.olleh.webtoon.common.util.MapperLoggerUtil" />
	 -->
</beans>